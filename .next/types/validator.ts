// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ..\..\src\app\checkout\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\checkout\\page.js")
  handler satisfies AppPageConfig<"/checkout">
}

// Validate ..\..\src\app\dashboard\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\dashboard\\page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ..\..\src\app\login\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\login\\page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ..\..\src\app\order-success\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\order-success\\page.js")
  handler satisfies AppPageConfig<"/order-success">
}

// Validate ..\..\src\app\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ..\..\src\app\payment-failed\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\payment-failed\\page.js")
  handler satisfies AppPageConfig<"/payment-failed">
}

// Validate ..\..\src\app\portador\dashboard\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\portador\\dashboard\\page.js")
  handler satisfies AppPageConfig<"/portador/dashboard">
}

// Validate ..\..\src\app\portador\login\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\portador\\login\\page.js")
  handler satisfies AppPageConfig<"/portador/login">
}

// Validate ..\..\src\app\portador\setup-password\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\portador\\setup-password\\page.js")
  handler satisfies AppPageConfig<"/portador/setup-password">
}

// Validate ..\..\src\app\purchase\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\purchase\\page.js")
  handler satisfies AppPageConfig<"/purchase">
}

// Validate ..\..\src\app\register\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\register\\page.js")
  handler satisfies AppPageConfig<"/register">
}

// Validate ..\..\src\app\scan\[qrCode]\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\scan\\[qrCode]\\page.js")
  handler satisfies AppPageConfig<"/scan/[qrCode]">
}

// Validate ..\..\src\app\subscription-success\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\subscription-success\\page.js")
  handler satisfies AppPageConfig<"/subscription-success">
}

// Validate ..\..\src\app\subscription\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\subscription\\page.js")
  handler satisfies AppPageConfig<"/subscription">
}

// Validate ..\..\src\app\verify-otp\page.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\verify-otp\\page.js")
  handler satisfies AppPageConfig<"/verify-otp">
}







// Validate ..\..\src\app\layout.tsx
{
  const handler = {} as typeof import("..\\..\\src\\app\\layout.js")
  handler satisfies LayoutConfig<"/">
}
